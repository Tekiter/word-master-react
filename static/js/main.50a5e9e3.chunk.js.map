{"version":3,"sources":["components/Layout.js","store/index.js","components/WordbookList.js","components/SideBar.js","utils/api.js","store/wordbook.js","components/WordbookToolbar.js","components/WordListPage.js","components/SettingPage.js","components/WordbookContent.js","components/AppContent.js","store/wordbookList.js","App.js","reportWebVitals.js","index.js"],"names":["sidebarWidth","useStyles","makeStyles","theme","root","display","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","Layout","appTitle","side","children","classes","className","Drawer","paper","variant","anchor","Toolbar","Typography","useStores","useContext","MobXProviderContext","addBtn","CreateWordbookDialog","props","useState","isOpen","setIsOpen","config","setConfig","closeDialog","render","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","margin","fullWidth","label","name","onChange","e","target","value","prev","DialogActions","Button","onClick","color","onSubmit","WordbookItem","book","selected","ListItem","button","ListItemText","Wordbook","observer","wordbookList","List","subheader","ListSubheader","books","map","current","select","create","startIcon","disableElevation","SideBar","WordbookList","fakeDelay","Promise","resolve","a","b","setTimeout","Math","floor","random","nextId","loadList","obj","localStorage","getItem","JSON","parse","maxId","forEach","max","saveList","jobj","stringify","setItem","loadBook","Error","undefined","wordList","saveBook","getWordbookList","bookObj","createWordbook","bookInfo","bookIndex","push","getWordbook","updateWordbookInfo","newData","WordbookStore","makeAutoObservable","this","api","runInAction","words","nameBox","alignItems","spacing","navTabs","wordbook","AppBar","position","elevation","Box","flexDirection","noWrap","title","fontSize","container","marginTop","ChangeName","currentName","onNameChange","others","newName","setNewName","useEffect","handleChange","Card","CardContent","onKeyDown","key","autoComplete","ml","size","placeholder","disabled","pages","component","WordListPage","changeName","load","Container","maxWidth","wordbookStore","selectedIndex","setSelectedIndex","autorun","PageContent","Tabs","val","page","idx","Tab","ContentSelector","WordbookListStore","ref","find","res","length","App","wordbookListStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50a5e9e3.chunk.js","sourcesContent":["import { Drawer, makeStyles, Toolbar, Typography } from \"@material-ui/core\";\n\nconst sidebarWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    width: `calc(100% - ${sidebarWidth}px)`,\n    marginLeft: sidebarWidth,\n  },\n  drawer: {\n    width: sidebarWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: sidebarWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  content: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Layout({ appTitle, side, children }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Drawer\n        className={classes.drawer}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        variant=\"permanent\"\n        anchor=\"left\"\n      >\n        <Toolbar>\n          <Typography variant=\"h6\">{appTitle}</Typography>\n        </Toolbar>\n        <div className={classes.drawerContainer}>{side}</div>\n      </Drawer>\n      <main className={classes.content}>\n        {/* <Toolbar /> */}\n\n        {children}\n      </main>\n    </div>\n  );\n}\n\nexport default Layout;\n","import { useContext } from \"react\";\nimport { MobXProviderContext } from \"mobx-react\";\n\nexport function useStores() {\n  return useContext(MobXProviderContext);\n}\n","import {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  ListSubheader,\n} from \"@material-ui/core\";\n\nimport { observer } from \"mobx-react\";\nimport { useState } from \"react\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport { useStores } from \"../store\";\n\nconst useStyles = makeStyles({\n  addBtn: {},\n});\n\nconst CreateWordbookDialog = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [config, setConfig] = useState(\"\");\n\n  const openDialog = () => {\n    setIsOpen(true);\n  };\n\n  const closeDialog = () => {\n    setIsOpen(false);\n  };\n\n  const submit = () => {\n    (props.onSubmit || (() => {}))(config);\n    closeDialog();\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setConfig((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <>\n      {props.render(openDialog)}\n      <Dialog\n        open={isOpen}\n        onClose={closeDialog}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">단어장 만들기</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            fullWidth\n            label=\"단어장 이름\"\n            name=\"name\"\n            onChange={handleChange}\n          ></TextField>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            취소\n          </Button>\n          <Button onClick={submit} color=\"primary\">\n            추가\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst WordbookItem = ({ book, selected, onClick }) => {\n  function handleItemClick() {\n    onClick(book);\n  }\n\n  return (\n    <ListItem button selected={selected} onClick={handleItemClick}>\n      <ListItemText>{book.name}</ListItemText>\n    </ListItem>\n  );\n};\n\nconst Wordbook = observer(() => {\n  const { wordbookList } = useStores();\n  const classes = useStyles();\n\n  function createWordbook(config) {\n    wordbookList.create(config);\n  }\n\n  return (\n    <>\n      <List subheader={<ListSubheader>내 단어장</ListSubheader>}>\n        {wordbookList.books.map((book) => (\n          <WordbookItem\n            book={book}\n            key={book.id}\n            selected={book === wordbookList.current}\n            onClick={() => wordbookList.select(book)}\n          />\n        ))}\n      </List>\n\n      <CreateWordbookDialog\n        onSubmit={createWordbook}\n        render={(open) => (\n          <Button\n            className={classes.addBtn}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddIcon />}\n            disableElevation\n            fullWidth\n            onClick={() => open()}\n          >\n            단어장 만들기\n          </Button>\n        )}\n      ></CreateWordbookDialog>\n    </>\n  );\n});\n\nexport default Wordbook;\n","import WordbookList from \"./WordbookList\";\n\nfunction SideBar() {\n  return <WordbookList />;\n}\n\nexport default SideBar;\n","function randInt(a, b) {\n  return a + Math.floor(Math.random() * (b - a + 1));\n}\n\nfunction fakeDelay() {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, randInt(0, 50));\n  });\n}\n\nlet nextId = 0;\nlet books = [];\n\nfunction loadList() {\n  const obj = localStorage.getItem(\"wordbookList\");\n\n  if (obj) {\n    books = JSON.parse(obj);\n\n    let maxId = -1;\n    books.forEach((book) => {\n      maxId = Math.max(maxId, book.id);\n    });\n    nextId = maxId + 1;\n  } else {\n    books = [];\n    nextId = 0;\n  }\n}\n\nfunction saveList() {\n  const jobj = JSON.stringify(books);\n  localStorage.setItem(\"wordbookList\", jobj);\n}\n\nfunction loadBook(id) {\n  const obj = localStorage.getItem(`wordbook-${id}`);\n  if (!obj) {\n    throw new Error(\"No book id \" + id);\n  }\n  const book = JSON.parse(obj);\n  if (book.wordList === undefined) {\n    book.wordList = [];\n  }\n  return book;\n}\n\nfunction saveBook(book) {\n  if (book.id === undefined) {\n    return;\n  }\n  localStorage.setItem(`wordbook-${book.id}`, JSON.stringify(book));\n}\n\nfunction removeBook(id) {\n  localStorage.removeItem(`wordbook-${id}`);\n}\n\nexport async function getWordbookList() {\n  await fakeDelay();\n\n  loadList();\n\n  return {\n    books: books.map((book) => {\n      const bookObj = loadBook(book.id);\n      return {\n        id: book.id,\n        name: bookObj.name,\n      };\n    }),\n    nextId,\n  };\n}\n\nexport async function createWordbook(bookInfo) {\n  await fakeDelay();\n\n  const bookIndex = {\n    id: nextId++,\n  };\n\n  books.push(bookIndex);\n\n  const book = {\n    id: bookIndex.id,\n    name: bookInfo.name,\n    wordList: [],\n  };\n  saveBook(book);\n  saveList();\n}\n\nexport async function getWordbook(id) {\n  await fakeDelay();\n\n  const book = loadBook(id);\n\n  return book;\n}\n\nexport async function deleteWordbook(id) {\n  const idx = books.findIndex((bookIndex) => bookIndex === id);\n\n  books.splice(idx, 1);\n\n  saveList();\n  removeBook(id);\n}\n\nexport async function updateWordbookInfo(id, newData) {\n  const book = await getWordbook(id);\n  const newBook = { ...book, ...newData };\n\n  saveBook(newBook);\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\n\nimport * as api from \"../utils/api\";\n\nexport default class WordbookStore {\n  wordList = [];\n  name = \"\";\n  id = -1;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  async load(id) {\n    const book = await api.getWordbook(id);\n    runInAction(() => {\n      this.wordList = book.words;\n      this.name = book.name;\n      this.id = id;\n    });\n  }\n\n  async changeName(name) {\n    this.name = name;\n    await api.updateWordbookInfo(this.id, { name });\n  }\n}\n","import {\n  AppBar,\n  Box,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { useStores } from \"../store\";\nimport { observer } from \"mobx-react\";\n\nconst useStyles = makeStyles((theme) => ({\n  nameBox: {\n    width: \"15em\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginLeft: theme.spacing(3),\n  },\n}));\n\nexport default observer(function WordbookToolbar({ navTabs }) {\n  const classes = useStyles();\n  const { wordbookList, wordbook } = useStores();\n\n  if (!wordbookList.selected) {\n    return <Toolbar />;\n  }\n\n  return (\n    <AppBar position=\"sticky\" color=\"transparent\" elevation={1}>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Box className={classes.nameBox}>\n          <Typography variant=\"h6\" noWrap>\n            {wordbook.name}\n          </Typography>\n        </Box>\n\n        {navTabs}\n      </Box>\n    </AppBar>\n  );\n});\n","import { Box } from \"@material-ui/core\";\nimport { observer } from \"mobx-react\";\n\nexport default observer(function WordListPage() {\n  return <Box>단어 페이지</Box>;\n});\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Container,\n  makeStyles,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { observer } from \"mobx-react\";\nimport { useEffect, useState } from \"react\";\nimport { useStores } from \"../store\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontSize: 14,\n  },\n  container: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction ChangeName({ currentName, onNameChange, ...others }) {\n  const classes = useStyles();\n\n  const [newName, setNewName] = useState(currentName);\n\n  useEffect(() => {\n    setNewName(currentName);\n  }, [currentName]);\n\n  const handleChange = () => {\n    onNameChange(newName);\n  };\n\n  const handleKey = (e) => {\n    if (e.key === \"Enter\") {\n      if (currentName !== newName) {\n        handleChange();\n      }\n    } else if (e.key === \"Escape\") {\n      setNewName(currentName);\n    }\n  };\n\n  return (\n    <Card {...others}>\n      <CardContent>\n        <Typography className={classes.title}>단어장 이름</Typography>\n        <Box display=\"flex\" flexDirection=\"row\">\n          <TextField\n            variant=\"outlined\"\n            value={newName}\n            onChange={(e) => setNewName(e.target.value)}\n            onKeyDown={handleKey}\n            fullWidth\n            autoComplete=\"off\"\n          />\n          <Box ml={1} display=\"flex\">\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"small\"\n              placeholder={currentName}\n              onClick={handleChange}\n              disabled={currentName === newName}\n            >\n              변경\n            </Button>\n          </Box>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default observer(function SettingPage() {\n  const { wordbook, wordbookList } = useStores();\n\n  const classes = useStyles();\n\n  async function changeName(name) {\n    await wordbook.changeName(name);\n    await wordbookList.load();\n  }\n\n  return (\n    <Container className={classes.container} maxWidth=\"sm\">\n      <ChangeName currentName={wordbook.name} onNameChange={changeName} />\n    </Container>\n  );\n});\n","import { useState } from \"react\";\nimport { observer, Provider } from \"mobx-react\";\nimport { Tab, Tabs } from \"@material-ui/core\";\nimport { useStores } from \"../store\";\n\nimport WordbookStore from \"../store/wordbook\";\nimport WordbookToolbar from \"./WordbookToolbar\";\nimport WordListPage from \"./WordListPage\";\nimport SettingPage from \"./SettingPage\";\nimport { autorun } from \"mobx\";\n\nconst pages = [\n  {\n    title: \"단어\",\n    component: WordListPage,\n  },\n  {\n    title: \"설정\",\n    component: SettingPage,\n  },\n];\n\nexport default observer(function WordbookContent() {\n  const { wordbookList } = useStores();\n\n  const [wordbookStore] = useState(() => new WordbookStore());\n\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  function handleSelectionChange(e, val) {\n    setSelectedIndex(val);\n  }\n\n  autorun(() => {\n    if (wordbookList.selected) {\n      const current = wordbookList.current;\n      wordbookStore.load(current.id);\n    }\n  });\n\n  if (!wordbookList.selected) {\n    return <div>단어장을 만들어보세요!</div>;\n  }\n\n  const PageContent = pages[selectedIndex].component;\n\n  return (\n    <Provider wordbook={wordbookStore}>\n      <WordbookToolbar\n        wordbookList={wordbookList}\n        navTabs={\n          <Tabs value={selectedIndex} onChange={handleSelectionChange}>\n            {pages.map((page, idx) => {\n              return <Tab label={page.title} key={idx}></Tab>;\n            })}\n          </Tabs>\n        }\n      />\n      <PageContent />\n    </Provider>\n  );\n});\n","import { observer } from \"mobx-react\";\nimport { useStores } from \"../store\";\nimport WordbookContent from \"./WordbookContent\";\n\nexport default observer(function AppContent() {\n  const { wordbookList } = useStores();\n\n  function ContentSelector() {\n    if (wordbookList.selected) {\n      return <div>선택된 단어장이 없습니다...</div>;\n    } else {\n      return <WordbookContent bookInfo={wordbookList.selected} />;\n    }\n  }\n\n  return (\n    <>\n      <ContentSelector />\n    </>\n  );\n});\n","import { makeAutoObservable, runInAction } from \"mobx\";\n\nimport * as api from \"../utils/api\";\n\nexport default class WordbookListStore {\n  books = [];\n  current = { id: -1 };\n\n  constructor() {\n    // makeObservable(this, {\n    //   books: observable,\n    //   create: action,\n    //   select: action,\n    //   save: action,\n    //   load: action,\n    //   count: computed,\n    //   current: observable,\n    //   selected: computed,\n    // });\n    makeAutoObservable(this);\n    this.load();\n  }\n\n  get count() {\n    return this.books.length;\n  }\n\n  get selected() {\n    return this.current.id !== -1;\n  }\n\n  async load() {\n    const res = await api.getWordbookList();\n    runInAction(() => {\n      this.books = res.books;\n    });\n  }\n\n  async create({ name }) {\n    await api.createWordbook({\n      name,\n    });\n    await this.load();\n  }\n\n  select = ({ id }) => {\n    const ref = this.books.find((book) => book.id === id);\n    if (ref) {\n      this.current = ref;\n    } else {\n      this.current = null;\n    }\n  };\n}\n","import { Provider } from \"mobx-react\";\nimport { useState } from \"react\";\nimport Layout from \"./components/Layout\";\nimport SideBar from \"./components/SideBar\";\nimport AppContent from \"./components/AppContent\";\nimport WordbookListStore from \"./store/wordbookList\";\n\nfunction App() {\n  const [wordbookListStore] = useState(() => new WordbookListStore());\n  return (\n    <Provider wordbookList={wordbookListStore}>\n      <Layout appTitle=\"Word Master\" side={<SideBar />}>\n        <AppContent></AppContent>\n      </Layout>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}